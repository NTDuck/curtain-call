@startuml

hide footbox
skinparam BackgroundColor transparent

actor Listener as User
boundary ":Song\nView" as View
participant ":Song\nController" as Controller
control ":AddSongToFavourites\nInteractor" as Interactor <<InputBoundary>>
database ":Listener\nRepository" as ListenerRepository <<Gateway>>
database ":Song\nRepository" as SongRepository <<Gateway>>
database ":Favourites\nRepository" as FavouritesRepository <<Gateway>>

User -> View: click on empty favourite icon
activate View

View -> View: change icon to color-filled

View -> Controller: pass RequestObject\n(listener_id, song_id)
deactivate View
activate Controller

Controller ->> Interactor: pass RequestModel\n(listener_id, song_id)
deactivate Controller
activate Interactor
    
alt OK
    par
    Interactor -> ListenerRepository: check if Listener exists\n(listener_id)
    activate ListenerRepository
    return TRUE
    deactivate ListenerRepository

    else
    Interactor -> SongRepository: check if Song exists\n(song_id)
    activate SongRepository
    return TRUE
    deactivate SongRepository
    
    end

    Interactor ->> FavouritesRepository: mark Song as Listener's favourite\n(listener_id, song_id)
    deactivate Interactor

else Error: Listener not found
    Interactor -> ListenerRepository: check if Listener exists\n(listener_id)
    activate Interactor
    activate ListenerRepository
    return FALSE
    deactivate Interactor
    deactivate ListenerRepository

else Error: Song not found
    Interactor -> SongRepository: check if Song exists\n(song_id)
    activate Interactor
    activate SongRepository
    return FALSE
    deactivate Interactor
    deactivate SongRepository

end

@enduml
