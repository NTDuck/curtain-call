@startuml

hide footbox
skinparam BackgroundColor transparent

actor "Guest/Listener"
boundary ArtistLinkView
boundary ArtistView
boundary LoginView
participant ViewArtistController
control ViewArtistInteractor <<InputBoundary>>
participant AuthTokenRepository <<Gateway>>
participant AuthTokenGenerator <<Gateway>>
participant ArtistRepository <<Gateway>>
participant ViewArtistPresenter <<OutputBoundary>>

"Guest/Listener" -> ArtistLinkView: click on navigatable element
activate "Guest/Listener"
activate ArtistLinkView

ArtistLinkView -> ArtistView: redirect
deactivate ArtistLinkView
activate ArtistView

ArtistView -> ViewArtistController: pass RequestObject\n(artistId)
activate ViewArtistController
    
alt OK
    ViewArtistController -> AuthTokenRepository: get authentication token
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewArtistController -> ViewArtistInteractor: repackage & pass RequestModel\n(authToken, artistId)
    deactivate ViewArtistController
    activate ViewArtistInteractor

    ViewArtistInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return true
    deactivate AuthTokenGenerator

    ViewArtistInteractor -> ArtistRepository: get Artist by ID\n(artistId)
    activate ArtistRepository
    return Some(artist)
    deactivate ArtistRepository

    ViewArtistInteractor ->> ViewArtistPresenter: pass ResponseModel\n(Ok(artist))
    deactivate ViewArtistInteractor
    activate ViewArtistPresenter

    ViewArtistPresenter ->> ArtistView: repackage & update ViewModel\n(Ok())
    deactivate ViewArtistPresenter

    ArtistView -> "Guest/Listener": see the result of the interaction
    deactivate ArtistView
    deactivate "Guest/Listener"
    
    newpage

else Error: Authentication token not found
    ViewArtistController -> AuthTokenRepository: get authentication token
    activate ViewArtistController
    activate "Guest/Listener"
    activate ArtistView
    activate AuthTokenRepository
    return None
    deactivate AuthTokenRepository

    ViewArtistController -> LoginView: redirect
    deactivate ArtistView
    deactivate ViewArtistController
    activate LoginView

    LoginView -> "Guest/Listener": see the result of the interaction
    deactivate LoginView
    deactivate "Guest/Listener"
    
else Error: Authentication token invalid
    ViewArtistController -> AuthTokenRepository: get authentication token
    activate ViewArtistController
    activate "Guest/Listener"
    activate ArtistView
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewArtistController -> ViewArtistInteractor: repackage & pass RequestModel\n(authToken, artistId)
    deactivate ViewArtistController
    activate ViewArtistInteractor

    ViewArtistInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return false
    deactivate AuthTokenGenerator

    ViewArtistInteractor ->> ViewArtistPresenter: pass ResponseModel\n(Err(AuthTokenInvalid))
    deactivate ViewArtistInteractor
    activate ViewArtistPresenter

    ViewArtistPresenter ->> ArtistView: repackage & update ViewModel\n(Err(AuthTokenInvalid))
    deactivate ViewArtistPresenter

    ArtistView -> LoginView: redirect
    deactivate ArtistView
    activate LoginView

    LoginView -> "Guest/Listener": see the result of the interaction
    deactivate LoginView
    deactivate "Guest/Listener"

end

@enduml
