@startuml

hide footbox
skinparam BackgroundColor transparent

actor Listener
actor Guest
boundary SongLinkView
boundary SongView
boundary LoginView
participant ViewSongController
control ViewSongInteractor <<InputBoundary>>
participant AuthTokenRepository <<Gateway>>
participant AuthTokenGenerator <<Gateway>>
participant SongRepository <<Gateway>>
participant ViewSongPresenter <<OutputBoundary>>

Listener -> SongLinkView: click on navigatable element
activate SongLinkView
activate Listener

SongLinkView -> SongView: redirect
deactivate SongLinkView
activate SongView

SongView -> ViewSongController: pass RequestObject\n(songId)
activate ViewSongController
    
alt OK
    ViewSongController -> AuthTokenRepository: get authentication token
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewSongController -> ViewSongInteractor: repackage & pass RequestModel\n(authToken, songId)
    deactivate ViewSongController
    activate ViewSongInteractor

    ViewSongInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return true
    deactivate AuthTokenGenerator

    ViewSongInteractor -> SongRepository: get Song
    activate SongRepository
    return Some(song)
    deactivate SongRepository

    ViewSongInteractor ->> ViewSongPresenter: pass ResponseModel\n(Ok(song))
    deactivate ViewSongInteractor
    activate ViewSongPresenter

    ViewSongPresenter ->> SongView: repackage & update ViewModel\n(Ok())
    deactivate ViewSongPresenter

    SongView -> Listener: see the result of the interaction
    deactivate Listener
    newpage

else Error: Authentication token not found
    activate ViewSongController

    ViewSongController -> AuthTokenRepository: get authentication token
    activate AuthTokenRepository
    return None
    deactivate AuthTokenRepository

    deactivate Listener
    activate Guest

    ViewSongController -> LoginView: redirect
    deactivate ViewSongController
    activate LoginView

    LoginView -> Guest: see the result of the interaction
    deactivate LoginView
    deactivate Guest

else Error: Authentication token invalid
    activate ViewSongController

    ViewSongController -> AuthTokenRepository: get authentication token
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewSongController -> ViewSongInteractor: repackage & pass RequestModel\n(authToken, songId)
    deactivate ViewSongController
    activate ViewSongInteractor

    ViewSongInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return false
    deactivate AuthTokenGenerator

    deactivate Listener
    activate Guest

    ViewSongInteractor ->> ViewSongPresenter: pass ResponseModel\n(Err(AuthTokenInvalid))
    deactivate ViewSongInteractor
    activate ViewSongPresenter

    ViewSongPresenter ->> SongView: repackage & update ViewModel\n(Err(AuthTokenInvalid))
    deactivate ViewSongPresenter

    SongView -> LoginView: redirect
    deactivate SongView
    activate LoginView

    LoginView -> Guest: see the result of the interaction
    deactivate LoginView
    deactivate Guest

end

@enduml
