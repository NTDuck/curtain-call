@startuml

hide footbox
skinparam BackgroundColor transparent

actor "Guest/Listener"
boundary SongLinkView
boundary SongView
boundary LoginView
participant ViewSongController
control ViewSongInteractor <<InputBoundary>>
participant AuthTokenRepository <<Gateway>>
participant AuthTokenGenerator <<Gateway>>
participant SongRepository <<Gateway>>
participant ViewSongPresenter <<OutputBoundary>>

"Guest/Listener" -> SongLinkView: click on navigatable element
activate "Guest/Listener"
activate SongLinkView

SongLinkView -> SongView: redirect
deactivate SongLinkView
activate SongView

SongView -> ViewSongController: pass RequestObject\n(songId)
activate ViewSongController
    
alt OK
    ViewSongController -> AuthTokenRepository: get authentication token
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewSongController -> ViewSongInteractor: repackage & pass RequestModel\n(authToken, songId)
    deactivate ViewSongController
    activate ViewSongInteractor

    ViewSongInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return true
    deactivate AuthTokenGenerator

    ViewSongInteractor -> SongRepository: get Song by ID\n(songId)
    activate SongRepository
    return Some(song)
    deactivate SongRepository

    ViewSongInteractor ->> ViewSongPresenter: pass ResponseModel\n(Ok(song))
    deactivate ViewSongInteractor
    activate ViewSongPresenter

    ViewSongPresenter ->> SongView: repackage & update ViewModel\n(Ok())
    deactivate ViewSongPresenter

    SongView -> "Guest/Listener": see the result of the interaction
    deactivate SongView
    deactivate "Guest/Listener"
    
    newpage

else Error: Authentication token not found
    ViewSongController -> AuthTokenRepository: get authentication token
    activate ViewSongController
    activate "Guest/Listener"
    activate SongView
    activate AuthTokenRepository
    return None
    deactivate AuthTokenRepository

    ViewSongController -> LoginView: redirect
    deactivate SongView
    deactivate ViewSongController
    activate LoginView

    LoginView -> "Guest/Listener": see the result of the interaction
    deactivate LoginView
    deactivate "Guest/Listener"
    
else Error: Authentication token invalid
    ViewSongController -> AuthTokenRepository: get authentication token
    activate ViewSongController
    activate "Guest/Listener"
    activate SongView
    activate AuthTokenRepository
    return Some(authToken)
    deactivate AuthTokenRepository

    ViewSongController -> ViewSongInteractor: repackage & pass RequestModel\n(authToken, songId)
    deactivate ViewSongController
    activate ViewSongInteractor

    ViewSongInteractor -> AuthTokenGenerator: verify authentication token
    activate AuthTokenGenerator
    return false
    deactivate AuthTokenGenerator

    ViewSongInteractor ->> ViewSongPresenter: pass ResponseModel\n(Err(AuthTokenInvalid))
    deactivate ViewSongInteractor
    activate ViewSongPresenter

    ViewSongPresenter ->> SongView: repackage & update ViewModel\n(Err(AuthTokenInvalid))
    deactivate ViewSongPresenter

    SongView -> LoginView: redirect
    deactivate SongView
    activate LoginView

    LoginView -> "Guest/Listener": see the result of the interaction
    deactivate LoginView
    deactivate "Guest/Listener"

end

@enduml
